/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userinterface.StudentRole;

import Business.EcoSystem;
import Business.FitnessChallenge;
import Business.FitnessChallengeManager;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.DefaultCellEditor;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
import userinterface.StudentRole.fitLearningsForStuJPanel.ButtonEditor;
import userinterface.StudentRole.fitLearningsForStuJPanel.ButtonRenderer;
//import userinterface.StudentRole.fitnessChallengesStuJPanel.ButtonEditor.ButtonListener;

/**
 *
 * @author Ketki
 */
public class fitnessChallengesStuJPanel extends javax.swing.JPanel {

    /**
     * Creates new form fitnessChallengesStuJPanel
     */
    private FitnessChallengeManager manager; // Instance of the FitnessChallengeManager class
    private String loggedInUsername;
    private JPanel userProcessContainer;
    private EcoSystem business;
   // private JTable fitTable;

    
    public fitnessChallengesStuJPanel(JPanel userProcessContainer, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.business = business;
        this.manager = new FitnessChallengeManager();
        populateChallenges();
        populateChallengeTable();
        setupVideoTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        fitLabel = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        fitTable = new javax.swing.JTable();

        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        fitLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        fitLabel.setForeground(new java.awt.Color(255, 255, 255));
        fitLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        fitLabel.setText(" Fitness Challenges");

        backJButton.setBackground(new java.awt.Color(0, 102, 102));
        backJButton.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        backJButton.setForeground(new java.awt.Color(255, 255, 255));
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(backJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(245, 245, 245)
                .addComponent(fitLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(400, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fitLabel)
                    .addComponent(backJButton))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        jSplitPane1.setLeftComponent(jPanel1);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        fitTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Fitness Challenges", "Accept"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(fitTable);
        if (fitTable.getColumnModel().getColumnCount() > 0) {
            fitTable.getColumnModel().getColumn(0).setResizable(false);
            fitTable.getColumnModel().getColumn(1).setResizable(false);
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(160, 160, 160)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 681, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(225, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(119, Short.MAX_VALUE))
        );

        jSplitPane1.setRightComponent(jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1066, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jSplitPane1, javax.swing.GroupLayout.Alignment.TRAILING))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 576, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addComponent(jSplitPane1)
                    .addContainerGap()))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    
       private void populateChallenges() {
        manager.addChallenge(new FitnessChallenge("30-Day Plank Challenge"));
        manager.addChallenge(new FitnessChallenge("Run 50 Miles in a Month"));
        manager.addChallenge(new FitnessChallenge("100 Pushups Challenge"));
        manager.addChallenge(new FitnessChallenge("Yoga for Flexibility"));
        manager.addChallenge(new FitnessChallenge("Swimming for Endurance"));
        manager.addChallenge(new FitnessChallenge("Cycling 100 km in a Week"));
        manager.addChallenge(new FitnessChallenge("Healthy Eating Challenge"));
        manager.addChallenge(new FitnessChallenge("Meditation for Stress Relief"));
        manager.addChallenge(new FitnessChallenge("Weightlifting for Strength"));
        manager.addChallenge(new FitnessChallenge("Hiking 10 Miles in a Day"));
    }
       

    // Method to populate the challenge table with data
    private void populateChallengeTable() {
 
     DefaultTableModel model = (DefaultTableModel) fitTable.getModel();
        model.setRowCount(0);

        for (FitnessChallenge challenge : manager.getChallenges()) {
            model.addRow(new Object[]{challenge.getTitle(), "Accept"});
        }
}
    
    private void setupVideoTable() {
    TableColumn playColumn = fitTable.getColumn("Accept");
    playColumn.setCellRenderer(new ButtonRenderer());
    playColumn.setCellEditor(new ButtonEditor(new JCheckBox())); // Add the missing closing parenthesis
    fitTable.setPreferredScrollableViewportSize(new Dimension(500, 200));
    fitTable.setRowHeight(30);
    playColumn.setPreferredWidth(100);
    playColumn.setMinWidth(100);
    playColumn.setMaxWidth(100);
    }

class ButtonEditor extends DefaultCellEditor {
    private JButton button;

    public ButtonEditor(JCheckBox checkBox) {
    super(checkBox);
    button = new JButton("Accept");
    button.addActionListener(e -> {
        int modelRow = fitTable.convertRowIndexToModel(fitTable.getEditingRow());
        String challengeTitle = (String) fitTable.getModel().getValueAt(modelRow, 0);
        int option = JOptionPane.showConfirmDialog(button, "Do you want to accept the challenge: " + challengeTitle + "?", "Accept Challenge", JOptionPane.YES_NO_OPTION);
        if (option == JOptionPane.YES_OPTION) {
            button.setText("Accepted");
            button.setEnabled(false);
            JOptionPane.showMessageDialog(button, "Challenge accepted!");
        }
    });
    }

    @Override
    public Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column) {
        return button;
    }

//    @Override
//    public Object getCellEditorValue() {
//        return "Accept";
//    }
    @Override
    public Object getCellEditorValue() {
        return button.getText(); // Return the current text of the button
    }
}

    class ButtonRenderer extends JButton implements TableCellRenderer {
    public ButtonRenderer() {
        setOpaque(true);
    }

    @Override
    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
        setText((value == null) ? "" : value.toString());
        return this;
    }
}

 

   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel fitLabel;
    private javax.swing.JTable fitTable;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane1;
    // End of variables declaration//GEN-END:variables
}
